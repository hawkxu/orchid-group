/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * OrchidAboutDialog.java
 *
 * Created on 2011-12-8, 19:21:25
 */
package com.xzq.osc.about;

import com.xzq.osc.OrchidConstants;
import com.xzq.osc.OrchidLogger;
import com.xzq.osc.OrchidUtils;
import com.xzq.osc.resource.Resource;
import java.awt.Desktop;
import java.awt.Font;
import java.io.IOException;
import java.util.Locale;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author zqxu
 */
public class OrchidAboutPane extends JPanel {

  private Class compClass;

  /**
   * Creates new form OrchidAboutDialog
   *
   * @param componentClass orchid component class
   */
  public OrchidAboutPane(Class componentClass) {
    super();
    this.compClass = componentClass;
    initComponents();
    customInitialization();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    lbComponent = new javax.swing.JLabel();
    lbDescription = new javax.swing.JLabel();
    lbVersionTitle = new javax.swing.JLabel();
    lbVersion = new javax.swing.JLabel();
    lbAuthorTitle = new javax.swing.JLabel();
    lbAuthor = new javax.swing.JLabel();
    lbProjectName = new javax.swing.JLabel();
    lbOrchid = new javax.swing.JLabel();
    lbVisit = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    lbLicense = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    lbSilk = new javax.swing.JLabel();

    lbComponent.setText("Component");

    lbDescription.setText("component description");

    lbVersionTitle.setText(Resource.getString("VERSION_TITLE")); // NOI18N

    lbVersion.setText("0.0.0.0");

    lbAuthorTitle.setText(Resource.getString("AUTHOR_TITLE")); // NOI18N

    lbAuthor.setText("Xu Zi Qiang");

    lbProjectName.setText(Resource.getString("PROJECT_NAME")); // NOI18N

    lbOrchid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xzq/osc/img/orchid.png"))); // NOI18N

    lbVisit.setForeground(new java.awt.Color(20, 20, 240));
    lbVisit.setText(Resource.getString("VISIT_ORCHID_LABEL")); // NOI18N
    lbVisit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    lbVisit.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        lbVisitMouseClicked(evt);
      }
    });

    jLabel1.setText("License:");

    lbLicense.setForeground(new java.awt.Color(20, 20, 240));
    lbLicense.setText("Apache License, Version 2.0");
    lbLicense.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    lbLicense.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        lbLicenseMouseClicked(evt);
      }
    });

    jLabel2.setText("Part of icons come from");

    lbSilk.setForeground(new java.awt.Color(20, 20, 240));
    lbSilk.setText("Silk Icons");
    lbSilk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    lbSilk.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        lbSilkMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lbLicense)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbVisit)
            .addContainerGap())
          .addGroup(layout.createSequentialGroup()
            .addComponent(lbOrchid, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(28, 28, 28)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(lbAuthorTitle)
                  .addComponent(lbVersionTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(lbAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(lbVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addComponent(lbProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lbComponent, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lbDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 0, Short.MAX_VALUE))))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(lbSilk)
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbComponent, lbDescription, lbProjectName});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(lbProjectName)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lbAuthorTitle)
              .addComponent(lbAuthor))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lbVersionTitle)
              .addComponent(lbVersion))
            .addGap(32, 32, 32)
            .addComponent(lbComponent)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lbDescription))
          .addComponent(lbOrchid, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lbVisit)
          .addComponent(jLabel1)
          .addComponent(lbLicense))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(lbSilk))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void lbVisitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbVisitMouseClicked
    browse("https://github.com/hawkxu/orchid-group");
  }//GEN-LAST:event_lbVisitMouseClicked

  private void lbLicenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLicenseMouseClicked
    browse("http://www.apache.org/licenses/LICENSE-2.0");
  }//GEN-LAST:event_lbLicenseMouseClicked

  private void lbSilkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbSilkMouseClicked
    browse("http://www.famfamfam.com/lab/icons/silk/");
  }//GEN-LAST:event_lbSilkMouseClicked

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel lbAuthor;
  private javax.swing.JLabel lbAuthorTitle;
  private javax.swing.JLabel lbComponent;
  private javax.swing.JLabel lbDescription;
  private javax.swing.JLabel lbLicense;
  private javax.swing.JLabel lbOrchid;
  private javax.swing.JLabel lbProjectName;
  private javax.swing.JLabel lbSilk;
  private javax.swing.JLabel lbVersion;
  private javax.swing.JLabel lbVersionTitle;
  private javax.swing.JLabel lbVisit;
  // End of variables declaration//GEN-END:variables

  private void customInitialization() {
    lbOrchid.setIcon(Resource.getOrchidIcon("orchid.png"));
    lbAuthor.setText(getAuthorName());
    lbVersion.setText(OrchidConstants.ORCHID_VERSION);
    lbComponent.setText(compClass.getSimpleName());
    lbComponent.setIcon(DefaultOrchidAbout.getDefaultIcon(compClass));
    lbDescription.setText(Resource.getString(compClass.getSimpleName()));
    SwingUtilities.invokeLater(new Runnable() {

      @Override
      public void run() {
        lbComponent.setFont(lbComponent.getFont().deriveFont(Font.BOLD));
        lbProjectName.setFont(lbProjectName.getFont().deriveFont(Font.BOLD));
      }
    });
  }

  private String getAuthorName() {
    if (Resource.getLocale().equals(Locale.SIMPLIFIED_CHINESE)) {
      return "许自强";
    } else {
      return "Xu Zi Qiang";
    }
  }

  private void browse(String url) {
    if (Desktop.isDesktopSupported()) {
      try {
        Desktop.getDesktop().browse(OrchidUtils.tryStringToURI(url));
      } catch (IOException ex) {
        OrchidLogger.warning("failed open url " + url, ex);
      }
    } else {
      OrchidUtils.msgInfo(this, "Please goto url " + url);
    }
  }
}
